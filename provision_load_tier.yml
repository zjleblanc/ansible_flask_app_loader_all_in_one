---
- name: Deploy haproxy load balancer
  hosts: load_balancers
  gather_facts: false 
  become: true

  vars:
    load_balancer_packages:
      - haproxy

  tags:
    - load_balancers

  tasks:

    - name: Install load balancer packages
      package:
        name: "{{ load_balancer_packages }}"
        state: present

    - name: Configure haproxy load balancing
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
      notify: restart_haproxy

    - name: Enable Haproxy
      service:
        name: haproxy
        state: started
        enabled: true

  handlers:

    - name: restart_haproxy
      service:
        name: haproxy
        state: restarted

- name: End to end smoke tests
  hosts: app_servers:database_servers
  gather_facts: true
  become: true
  tags:
    - smoketest  

  tasks:

    - name: Smoketest Postgres database
      postgresql_ping:
        db: flask_db
        login_host: "{{ groups.database_servers[0] }}"
        login_user: flask
        login_password: redhat
        ssl_mode: disable
      delegate_to: "{{ groups.app_servers[0] }}"
      run_once: true
      tags:
        - smoketest

- name: End to end smoke tests
  hosts: app_servers
  become: false
  gather_facts: false
  tags:
    - smoketest  
  tasks:
 
    - name: Check webserver for correct response
      uri:
        url: "http://frontend1.06e0.example.opentlc.com/ping"
        return_content: yes
      until: '"alive" in result.content'
      retries: 10
      delay: 1
      register: result
      delegate_to: localhost
